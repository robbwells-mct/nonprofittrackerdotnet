@model IEnumerable<NonprofitTracker.Models.ServiceRequest>
@using NonprofitTracker.Models

@{
    ViewData["Title"] = "Service Requests";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h2">
        <i class="bi bi-headset text-primary me-2"></i>Service Requests
    </h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="bi bi-plus-circle me-1"></i>New Request
    </a>
</div>

<!-- Filter Section -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label for="status" class="form-label">Status</label>
                <select name="status" class="form-select">
                    <option value="">All Statuses</option>
                    @foreach (RequestStatus status in Enum.GetValues<RequestStatus>())
                    {
                        <option value="@status" selected="@(ViewBag.CurrentStatus?.ToString() == status.ToString())">
                            @status
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-4">
                <label for="priority" class="form-label">Priority</label>
                <select name="priority" class="form-select">
                    <option value="">All Priorities</option>
                    @foreach (Priority priority in Enum.GetValues<Priority>())
                    {
                        <option value="@priority" selected="@(ViewBag.CurrentPriority?.ToString() == priority.ToString())">
                            @priority
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <button type="submit" class="btn btn-outline-primary me-2">
                    <i class="bi bi-funnel me-1"></i>Filter
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-clockwise me-1"></i>Reset
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Pending</h6>
                        <h4>@Model.Count(sr => sr.Status == RequestStatus.Pending)</h4>
                    </div>
                    <i class="bi bi-clock-history fs-1 opacity-50"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">In Progress</h6>
                        <h4>@Model.Count(sr => sr.Status == RequestStatus.InProgress)</h4>
                    </div>
                    <i class="bi bi-gear fs-1 opacity-50"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Completed</h6>
                        <h4>@Model.Count(sr => sr.Status == RequestStatus.Completed)</h4>
                    </div>
                    <i class="bi bi-check-circle fs-1 opacity-50"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-danger text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Urgent</h6>
                        <h4>@Model.Count(sr => sr.Priority == Priority.Urgent && sr.Status != RequestStatus.Completed)</h4>
                    </div>
                    <i class="bi bi-exclamation-triangle fs-1 opacity-50"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Service Requests Table -->
<div class="card">
    <div class="card-header">
        <h5 class="mb-0">All Service Requests</h5>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Constituent</th>
                            <th>Type</th>
                            <th>Priority</th>
                            <th>Status</th>
                            <th>Assigned Staff</th>
                            <th>Date Requested</th>
                            <th>Due Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="@(item.IsOverdue ? "table-danger" : "")">
                                <td>
                                    <div class="fw-bold">@item.Title</div>
                                    <small class="text-muted">@item.Description.Substring(0, Math.Min(50, item.Description.Length))@(item.Description.Length > 50 ? "..." : "")</small>
                                </td>
                                <td>@item.Constituent?.FirstName @item.Constituent?.LastName</td>
                                <td>
                                    <span class="badge bg-secondary">@item.RequestType</span>
                                </td>
                                <td>
                                    @switch (item.Priority)
                                    {
                                        case Priority.Urgent:
                                            <span class="badge bg-danger">@item.Priority</span>
                                            break;
                                        case Priority.High:
                                            <span class="badge bg-warning">@item.Priority</span>
                                            break;
                                        case Priority.Medium:
                                            <span class="badge bg-info">@item.Priority</span>
                                            break;
                                        case Priority.Low:
                                            <span class="badge bg-light text-dark">@item.Priority</span>
                                            break;
                                    }
                                </td>
                                <td>
                                    @switch (item.Status)
                                    {
                                        case RequestStatus.Pending:
                                            <span class="badge bg-warning">@item.Status</span>
                                            break;
                                        case RequestStatus.InProgress:
                                            <span class="badge bg-info">@item.Status</span>
                                            break;
                                        case RequestStatus.Completed:
                                            <span class="badge bg-success">@item.Status</span>
                                            break;
                                        case RequestStatus.Cancelled:
                                            <span class="badge bg-secondary">@item.Status</span>
                                            break;
                                    }
                                </td>
                                <td>@(item.AssignedStaff ?? "Unassigned")</td>
                                <td>
                                    @item.DateRequested.ToString("MM/dd/yyyy")
                                    <br>
                                    <small class="text-muted">@item.DaysOpen days ago</small>
                                </td>
                                <td>
                                    @if (item.DueDate.HasValue)
                                    {
                                        <div class="@(item.IsOverdue ? "text-danger fw-bold" : "")">
                                            @item.DueDate.Value.ToString("MM/dd/yyyy")
                                            @if (item.IsOverdue)
                                            {
                                                <i class="bi bi-exclamation-triangle text-danger"></i>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No due date</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (ViewBag.TotalPages > 1)
            {
                <nav aria-label="Service requests pagination" class="mt-3">
                    <ul class="pagination justify-content-center">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" 
                                   asp-route-page="@(ViewBag.CurrentPage - 1)" 
                                   asp-route-status="@ViewBag.CurrentStatus" 
                                   asp-route-priority="@ViewBag.CurrentPriority">Previous</a>
                            </li>
                        }

                        @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" 
                                   asp-route-page="@i" 
                                   asp-route-status="@ViewBag.CurrentStatus" 
                                   asp-route-priority="@ViewBag.CurrentPriority">@i</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" 
                                   asp-route-page="@(ViewBag.CurrentPage + 1)" 
                                   asp-route-status="@ViewBag.CurrentStatus" 
                                   asp-route-priority="@ViewBag.CurrentPriority">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-inbox display-4 text-muted"></i>
                <h4 class="mt-3">No Service Requests Found</h4>
                <p class="text-muted">There are no service requests matching your criteria.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-1"></i>Create First Request
                </a>
            </div>
        }
    </div>
</div>
